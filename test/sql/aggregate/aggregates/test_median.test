# name: test/sql/aggregate/aggregates/test_median.test
# description: Test MEDIAN aggregate
# group: [aggregates]

statement ok
PRAGMA enable_verification

statement ok
PRAGMA verify_external

# scalar quantiles
query II
SELECT median(NULL), median(1)
----
NULL	1

query II
SELECT median(NULL), median(1) FROM range(2000)
----
NULL	1

statement ok
create table quantile as select range r, random() from range(10000) union all values (NULL, 0.1), (NULL, 0.5), (NULL, 0.9) order by 2;

query I
SELECT median(r) FROM quantile
----
4999

# quantitative types get interpolated

foreach type float double smallint integer bigint hugeint decimal(10,2)

query I
SELECT median(r::${type}) FROM quantile
----
4999.5

endloop

query I
SELECT median(r::tinyint) FROM quantile where r < 100
----
49.5

query I
SELECT median(case when r is null then null else [r] end) FROM quantile
----
[4999.5]

query I
SELECT median(case when r is null then null else {'i': r} end) FROM quantile
----
{'i': 4999.5}

# qualitative types get floored

# sorting order is different for varchars and numbers
# so a different result here is expected
query I
SELECT median(r::varchar) FROM quantile
----
5498

# adding a prefix
query I
SELECT median(case when r is null then null else concat('thishasalongprefix_', r::varchar) end) FROM quantile
----
thishasalongprefix_5498

query I
SELECT median(NULL) FROM quantile
----
NULL

query I
SELECT median(42) FROM quantile
----
42

